# –ö–ª–∞—Å –¢–≤–∞—Ä–∏–Ω–∞
class Animal:
    def __init__(self, name, species, age, sound):
        self.name = name
        self.species = species
        self.age = age
        self.sound = sound
        self.hunger = 5  # 0 - –¥—É–∂–µ —Å–∏—Ç–∞, 10 - –¥—É–∂–µ –≥–æ–ª–æ–¥–Ω–∞
        self.alive = True  # —è–∫—â–æ False -> —Ç–≤–∞—Ä–∏–Ω–∞ –≤—Ç–µ–∫–ª–∞

    def make_sound(self):
        if not self.alive:
            print(f"{self.name} –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î –≤ –∑–æ–æ–ø–∞—Ä–∫—É... üò¢")
            return
        if self.hunger >= 8:
            print(f"{self.name} ({self.species}) –¥—É–∂–µ –≥–æ–ª–æ–¥–Ω–∞ —ñ –∫–∞–∂–µ: '–î–∞–π —ó—Å—Ç–∏!' üòø")
        else:
            print(f"{self.name} ({self.species}, {self.age} —Ä–æ–∫—ñ–≤) –∫–∞–∂–µ: {self.sound}")

    def feed(self):
        if not self.alive:
            print(f"{self.name} –≤–∂–µ –≤—Ç–µ–∫–ª–∞, —Ç–∏ –Ω–µ –º–æ–∂–µ—à —ó—ó –Ω–∞–≥–æ–¥—É–≤–∞—Ç–∏ üòî")
            return
        if self.hunger > 0:
            self.hunger -= 2
            if self.hunger < 0:
                self.hunger = 0
            print(f"üçé –¢–∏ –ø–æ–≥–æ–¥—É–≤–∞–≤ {self.name}. –°–∏—Ç—ñ—Å—Ç—å —Ç–µ–ø–µ—Ä: {10 - self.hunger}/10")
        else:
            print(f"{self.name} –≤–∂–µ —Å–∏—Ç–∞ —ñ –Ω–µ —Ö–æ—á–µ —ó—Å—Ç–∏! üòä")

    def status(self):
        if not self.alive:
            print(f"{self.name} –≤—Ç–µ–∫–ª–∞ –∑ –∑–æ–æ–ø–∞—Ä–∫—É! üö™üêæ")
        else:
            print(f"{self.name}: —Å–∏—Ç—ñ—Å—Ç—å {10 - self.hunger}/10")

    def get_hungrier(self):
        """–¢–≤–∞—Ä–∏–Ω–∞ —Å—Ç–∞—î –≥–æ–ª–æ–¥–Ω—ñ—à–æ—é –∑ —á–∞—Å–æ–º"""
        if self.alive and self.hunger < 10:
            self.hunger += 1
        elif self.hunger >= 10 and self.alive:
            print(f"‚ö†Ô∏è {self.name} –Ω–µ –≤–∏—Ç—Ä–∏–º–∞–ª–∞ –≥–æ–ª–æ–¥—É —ñ –≤—Ç–µ–∫–ª–∞ –∑ –∑–æ–æ–ø–∞—Ä–∫—É! üèÉ‚Äç‚ôÇÔ∏èüêæ")
            self.alive = False


# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç–∏ (—Ç–≤–∞—Ä–∏–Ω)
cat = Animal("–ú—É—Ä—á–∏–∫", "–∫—ñ—Ç", 3, "–ú—è—É! üê±")
dog = Animal("–®–∞—Ä—ñ–∫", "—Å–æ–±–∞–∫–∞", 5, "–ì–∞–≤! üê∂")
parrot = Animal("–ö—ñ–≤—ñ", "–ø–∞–ø—É–≥–∞", 2, "–ö–∞—Ä—Ä! ü¶ú")

# –°–ø–∏—Å–æ–∫ —Ç–≤–∞—Ä–∏–Ω
zoo = [cat, dog, parrot]

# –ú–µ–Ω—é
while True:
    print("\n=== –ó–û–û–ü–ê–†–ö ===")
    for i, animal in enumerate(zoo, start=1):
        status = "‚úÖ" if animal.alive else "‚ùå –í—Ç–µ–∫–ª–∞"
        print(f"{i}. {animal.name} ({animal.species}) - {status}")
    print("0. –í–∏–π—Ç–∏ üö™")

    choice = input("–í–∏–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Ç–≤–∞—Ä–∏–Ω–∏: ")

    if not choice.isdigit():
        print("‚ùå –¢—Ä–µ–±–∞ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ.")
        continue

    choice = int(choice)

    if choice == 0:
        print("–î—è–∫—É—î–º–æ, —â–æ –∑–∞–≤—ñ—Ç–∞–≤ —É –∑–æ–æ–ø–∞—Ä–∫! üëã")
        break

    if 1 <= choice <= len(zoo):
        selected_animal = zoo[choice - 1]

        # –ü—ñ–¥–º–µ–Ω—é –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏
        while True:
            print(f"\n--- {selected_animal.name} ---")
            print("1. –ü–æ—á—É—Ç–∏ –∑–≤—É–∫ üêæ")
            print("2. –ù–∞–≥–æ–¥—É–≤–∞—Ç–∏ üçé")
            print("3. –ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Å—Ç–∞—Ç—É—Å üìä")
            print("0. –ù–∞–∑–∞–¥ üîô")

            action = input("–©–æ –∑—Ä–æ–±–∏—Ç–∏? ")

            if not action.isdigit():
                print("‚ùå –¢—Ä–µ–±–∞ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ.")
                continue

            action = int(action)

            if action == 1:
                selected_animal.make_sound()
            elif action == 2:
                selected_animal.feed()
            elif action == 3:
                selected_animal.status()
            elif action == 0:
                break
            else:
                print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∞ –¥—ñ—è!")

            # üî• –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –¥—ñ—ó –≤—Å—ñ —Ç–≤–∞—Ä–∏–Ω–∏ –≥–æ–ª–æ–¥–Ω—ñ—à–∞—é—Ç—å
            for a in zoo:
                if a != selected_animal:
                    a.get_hungrier()

    else:
        print(f"‚ùå –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ {len(zoo)}.")
